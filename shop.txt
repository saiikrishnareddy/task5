

CREATE TABLE Customers (
    customer_id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_name TEXT NOT NULL,
    email TEXT NOT NULL
);

CREATE TABLE Orders (
    order_id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER,
    order_date TEXT,  -- SQLite uses TEXT for dates
    amount INTEGER NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
);


--data inserting

INSERT INTO Customers (customer_name, email) VALUES
    ('Alice Smith', 'alice@example.com'),
    ('Bob Johnson', 'bob@example.com'),
    ('Charlie Brown', 'charlie@example.com'),
    ('Diana Prince', 'diana@example.com');


--data inserting

INSERT INTO Orders (customer_id, order_date, amount) VALUES
    (1, '2023-01-10', 150),
    (1, '2023-01-15', 200),
    (2, '2023-01-20', 300),
    (3, '2023-02-05', 250),
    (NULL, '2023-02-10', 100); 

--INNER JOIN

SELECT 
    c.customer_id,
    c.customer_name,
    o.order_id,
    o.order_date,
    o.amount
FROM 
    Customers c
INNER JOIN 
    Orders o ON c.customer_id = o.customer_id;




--LEFT JOIN

SELECT 
    c.customer_id,
    c.customer_name,
    o.order_id,
    o.order_date,
    o.amount
FROM 
    Customers c
LEFT JOIN 
    Orders o ON c.customer_id = o.customer_id;

--RIGHT JOIN


SELECT 
    c.customer_id,
    c.customer_name,
    o.order_id,
    o.order_date,
    o.amount
FROM 
    Orders o
LEFT JOIN 
    Customers c ON o.customer_id = c.customer_id;



--FULL JOIN

SELECT 
    c.customer_id,
    c.customer_name,
    o.order_id,
    o.order_date,
    o.amount
FROM 
    Customers c
LEFT JOIN 
    Orders o ON c.customer_id = o.customer_id

UNION

SELECT 
    c.customer_id,
    c.customer_name,
    o.order_id,
    o.order_date,
    o.amount
FROM 
    Orders o
LEFT JOIN 
    Customers c ON o.customer_id = c.customer_id
WHERE 
    c.customer_id IS NULL;






